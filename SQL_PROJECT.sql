CREATE database IF NOT exists global_superstore;

USE global_superstore;


-- creating table "customers"

CREATE TABLE customers(
customer_id VARCHAR(50) PRIMARY KEY,
customer_name VARCHAR(50),
segment VARCHAR(40),
country VARCHAR(40)
);

-- creating table "orders"

CREATE TABLE orders(
order_id VARCHAR(40) PRIMARY KEY,
customer_id VARCHAR(50),
order_date DATE,
product_id VARCHAR(60),
category VARCHAR(40),
product_name VARCHAR(200),
sales DECIMAL(10,2),
quantity int(4),
discount DECIMAL (4,2),
profit DECIMAL(10,2),
sippment_cost DECIMAL(8,2),
FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);

                     /*insights*/
-- 1. **What is the total sales and profit generated by each customer segment?**
-- * Insight: Compare how Consumer, Corporate, and Home Office perform financially.
SELECT segment, sum(sales), sum(profit)
FROM orders AS o
JOIN
customers AS c ON o.customer_id = c.customer_id
GROUP BY segment;                     

-- 2. **Which 5 customers contributed the highest total sales, and what are their segments and countries?**
-- * Insight: Identify key revenue-generating customers.
SELECT customer_name, segment, country, sales
FROM customers AS c
JOIN
orders AS o ON o.customer_id = c.customer_id
ORDER BY sales DESC
LIMIT 5;

-- 3. **Which country generated the highest average profit per order?**
--  * Insight: Understand profitability across geographies.
SELECT country, ROUND(AVG(profit),2) AS avg_profit
FROM customers AS c
JOIN
orders AS o ON c.customer_id = o.customer_id
GROUP BY country
ORDER BY avg_profit DESC
LIMIT 1;
 
-- 4. **What is the average shipping cost and discount given per segment?**
-- * Insight: Analyze how company pricing or delivery strategy differs by customer type.
SELECT segment, AVG(shipping_cost), AVG(discount)
FROM customers AS c
JOIN
orders AS o ON c.customer_id = o.customer_id
GROUP BY segment;

-- 5. **Which product category is the most profitable in each customer segment?**
-- * Insight: Segment-wise product category performance.
SELECT segment, category, ROUND(SUM(profit),2) AS total_profit
FROM customers AS c
JOIN
orders AS o ON c.customer_id = o.customer_id
GROUP BY segment, category
ORDER BY total_profit DESC;

-- **PRODUCT & SALES ANALYSIS**

-- 6. **Which 5 products have the highest total profit despite high discounting (discount ≥ 0.2)?**
--   * Insight: High discount, still profitable — indicates product strength.
SELECT product_name, profit -- avg(discount) AS avg_discount
FROM orders
WHERE discount >= 0.2
ORDER BY profit DESC
LIMIT 5;

-- 	7. **Which products are frequently sold in high quantity but have negative average profit?**
-- * Insight: Revenue leak — good to recommend discontinuation or pricing strategy change.
SELECT product_name, quantity
FROM orders
WHERE profit < 0
ORDER BY quantity DESC
LIMIT 10;

-- 8. **What are the top 3 most shipped products (by quantity) in each segment?**
-- * Insight: Popular products per customer type.
SELECT segment, product_name, total_quantity
FROM (
    SELECT 
        c.segment,
        o.product_name,
        SUM(o.quantity) AS total_quantity,
        RANK() OVER (PARTITION BY c.segment ORDER BY SUM(o.quantity) DESC) AS rnk
    FROM orders o
    JOIN customers c ON o.customer_id = c.customer_id
    GROUP BY c.segment, o.product_name
) ranked
WHERE rnk <= 3
ORDER BY segment, rnk;

-- 9. **Find all orders where shipping cost was more than 30% of the sales value.**
-- * Insight: Cost inefficiencies that may be impacting margins.
SELECT order_id, shipping_cost
from orders
WHERE shipping_cost > 0.3 * sales
ORDER BY shipping_cost DESC;

-- **TIME-BASED INSIGHTS**

-- 10. **Show the monthly sales trend for each segment over the last 3 years.**
-- * Insight: Understand segment performance over time.
SELECT 
  DATE_FORMAT(o.order_date, '%Y-%m') AS year_mont,
  c.segment,
  SUM(o.sales) AS total_sales
FROM orders o
JOIN customers c ON o.customer_id = c.customer_id
WHERE YEAR (o.order_date) BETWEEN 2012 AND 2014
GROUP BY year_mont, c.segment
ORDER BY year_mont, c.segment;

-- 11. **Which month and year had the highest profit and how did each segment contribute to it?**
-- * Insight: Seasonal trends and drivers.
SELECT  year_mont, segment, total_profit
FROM (
    SELECT 
        DATE_FORMAT(o.order_date, '%Y-%M') AS year_mont,
        c.segment,
        SUM(o.profit) AS total_profit,
        RANK() OVER (PARTITION BY c.segment ORDER BY SUM(o.profit) DESC) AS rnk
    FROM orders o
    JOIN customers c ON o.customer_id = c.customer_id
    GROUP BY year_mont, c.Segment
) ranked
WHERE rnk <= 1
ORDER BY  total_profit DESC, rnk;

-- 12. **Find the month-over-month profit growth for the consumer segments.**
-- * Insight: Growth tracking (requires window functions or self-joins).
WITH monthly_data AS (
    SELECT DATE_FORMAT(o.order_date, '%Y-%m') AS year_mont,
           SUM(o.profit) AS monthly_profit
    FROM orders o
    JOIN customers c ON c.customer_id = o.customer_id
    WHERE c.segment = 'consumer'
    GROUP BY DATE_FORMAT(o.order_date, '%Y-%m')
)
SELECT year_mont,
       monthly_profit,
       LAG(monthly_profit) OVER (ORDER BY year_mont) AS previous_month_profit,
       ROUND(
           (monthly_profit - LAG(monthly_profit) OVER (ORDER BY year_mont)) / 
           NULLIF(LAG(monthly_profit) OVER (ORDER BY year_mont), 0) * 100, 2
       ) AS mom_growth_percent
FROM monthly_data;

-- 13. **Which segment has the highest return on sales (Profit/Sales ratio)?**
-- * Insight: Efficiency by segment, not just volume.
SELECT c.segment,
       SUM(o.profit) AS total_profit,
       SUM(o.sales) AS total_sales,
       ROUND(SUM(o.profit) / NULLIF(SUM(o.sales), 0), 4) AS return_on_sales
FROM orders o
JOIN customers c ON c.customer_id = o.customer_id
GROUP BY c.segment
ORDER BY return_on_sales DESC
LIMIT 1;

        










 







